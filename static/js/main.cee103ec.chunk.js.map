{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getRandomUser","a","axios","get","data","console","log","App","initialInfo","login","name","birthDate","address","email","phoneNumber","subscription","employment","useState","info","setInfo","nameInput","useRef","pwInput","className","type","value","onClick","placeholder","ref","required","autoFocus","then","raw","country","state","city","street_name","street_address","zip_code","first_name","last_name","date_of_birth","phone_number","title","current","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAKMA,EAAa,uCAAG,4BAAAC,EAAA,+EAECC,IAAMC,IAAI,qDAFX,cAEZC,EAFY,yBAGXA,GAHW,gCAKlBC,QAAQC,IAAI,UAAZ,MALkB,yDAAH,qDAwFJC,EA/EH,WAEV,IAAMC,EAAc,CAClBC,OAAO,EACPC,KAAM,GACNC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,WAAY,IAGd,EAAwBC,mBAAST,GAAjC,mBAAOU,EAAP,KAAaC,EAAb,KAEMC,EAAYC,mBACZC,EAAUD,mBAERZ,EAAkFS,EAAlFT,MAAOC,EAA2EQ,EAA3ER,KAAMC,EAAqEO,EAArEP,UAAWC,EAA0DM,EAA1DN,QAASC,EAAiDK,EAAjDL,MAAOC,EAA0CI,EAA1CJ,YAAaC,EAA6BG,EAA7BH,aAAcC,EAAeE,EAAfF,WA+B3E,OACE,qBAAKO,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sDAEF,0BAASA,UAAU,cAAnB,UACE,sBAAKA,UAAU,YAAf,UACI,uBAAOC,KAAK,SAASC,MAAM,SAASC,QAf7B,WACjBP,EAAQ,2BACHD,GACAV,OAaK,8CACA,uBAAOE,KAAK,YAAYc,KAAK,OAAOG,YAAY,YAAYC,IAAKR,EAAWS,UAAQ,EAACC,WAAS,IAC9F,6CACA,uBAAOpB,KAAK,WAAWc,KAAK,WAAWG,YAAY,WAAWC,IAAKN,EAASO,UAAQ,IACpF,uBAAOL,KAAK,SAASC,MAAM,QAAQC,QA1C5B,WAEjB1B,IACG+B,MAAK,SAAAC,GACJ,MAAsEA,EAAI5B,KAAKQ,QAAxEqB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,eAAgBC,EAA1D,EAA0DA,SAC1DnB,EAAQ,2BACHD,GADE,IAELT,OAAO,EACPC,KAAMsB,EAAI5B,KAAKmC,WAAaP,EAAI5B,KAAKoC,UACrC7B,UAAWqB,EAAI5B,KAAKqC,cACpB7B,QAAQ,GAAD,OAAKyB,EAAL,aAAwBD,EAAxB,aAAwCD,EAAxC,aAAiDD,EAAjD,aAA2DI,EAA3D,YAAuEL,GAC9EpB,MAAOmB,EAAI5B,KAAKS,MAChBC,YAAakB,EAAI5B,KAAKsC,aACtB3B,aAAciB,EAAI5B,KAAKW,aACvBC,WAAYgB,EAAI5B,KAAKY,WAAW2B,SAGlCvB,EAAUwB,QAAQnB,MAAQ,GAC1BH,EAAQsB,QAAQnB,MAAQ,YA0BtB,sBAAKF,UAAU,aAAf,UACE,4BAAG,iCAASd,GAAK,UAAOC,EAAP,8CAChBD,GAAS,8BAAG,sDAAH,IAAsCE,KAC/CF,GAAS,8BAAG,gDAAH,IAAgCG,KACzCH,GAAS,8BAAG,8CAAH,IAA8BI,KACvCJ,GAAS,8BAAG,qDAAH,IAAqCK,KAC9CL,GAAS,8BAAG,mDAAH,IAAmCO,KAC5CP,GAAU,8BAAG,qDAAH,IAAqCM,EAAe,MAAQ,oBCzEpE8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cee103ec.chunk.js","sourcesContent":["import './App.css';\nimport { useRef, useState } from 'react';\n\nimport axios from \"axios\";\n\nconst getRandomUser = async () => {\n  try {\n    const data = await axios.get(\"https://random-data-api.com/api/users/random_user\");\n    return data;\n  } catch(err) {\n    console.log(\"error: \", err);\n  }\n}\n\nconst App = () => {\n\n  const initialInfo = {\n    login: false,\n    name: '',\n    birthDate: '',\n    address: '',\n    email: '',\n    phoneNumber: '',\n    subscription: {},\n    employment: ''\n  }\n\n  const [info, setInfo] = useState(initialInfo);\n\n  const nameInput = useRef();\n  const pwInput = useRef();\n\n  const { login, name, birthDate, address, email, phoneNumber, subscription, employment } = info;\n\n  const submitUser = () => {\n\n    getRandomUser()\n      .then(raw => {\n        const {country, state, city, street_name, street_address, zip_code} = raw.data.address;\n        setInfo({\n          ...info,\n          login: true,\n          name: raw.data.first_name + raw.data.last_name,\n          birthDate: raw.data.date_of_birth,\n          address: `${street_address}, ${street_name}, ${city}, ${state}, ${zip_code} ${country}`,\n          email: raw.data.email,\n          phoneNumber: raw.data.phone_number,\n          subscription: raw.data.subscription,\n          employment: raw.data.employment.title\n        })\n\n        nameInput.current.value = '';\n        pwInput.current.value = '';\n      });\n  }\n\n  const logoutUser = () => {\n    setInfo({\n      ...info,\n      ...initialInfo\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <header className=\"App-header\">\n          <h1>Login Mini Project</h1>\n        </header>\n        <section className=\"App-section\">\n          <div className=\"input-box\">\n              <input type=\"button\" value=\"Logout\" onClick={logoutUser} />\n              <label>User Name</label>\n              <input name=\"housename\" type=\"text\" placeholder=\"User Name\" ref={nameInput} required autoFocus />\n              <label>Password</label>\n              <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={pwInput} required />\n              <input type=\"button\" value=\"Login\" onClick={submitUser} />\n          </div>\n          <div className=\"output-box\">\n            <p><strong>{login && `${name}님 반갑습니다.`}</strong></p>\n            {login && <p><strong>Date of Birth : </strong> {birthDate}</p>}\n            {login && <p><strong>Address : </strong> {address}</p>}\n            {login && <p><strong>Email : </strong> {email}</p>}\n            {login && <p><strong>Phone Number : </strong> {phoneNumber}</p>}\n            {login && <p><strong>Employment : </strong> {employment}</p>}\n            {login && (<p><strong>Subscription : </strong> {subscription ? \"yes\" : \"no\"}</p>)}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}