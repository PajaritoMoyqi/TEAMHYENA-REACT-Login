{"version":3,"sources":["Join.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["nameReducer","state","action","type","passwordReducer","password2Reducer","Join","useReducer","name","nameDispatch","password","passwordDispatch","password2","password2Dispatch","nameInput","useRef","pwInput","pwInput2","numberPattern","letterPattern","specialCharacterPattern","className","placeholder","ref","required","autoFocus","onChange","userInput","current","value","length","test","writingsArrRev","writingsArr","reverse","getRandomUser","a","axios","get","data","console","log","Main","initialInfo","login","birthDate","address","email","phoneNumber","subscription","employment","alert","showPersonalData","useState","info","setInfo","onClick","then","raw","country","city","street_name","street_address","zip_code","first_name","last_name","date_of_birth","phone_number","title","style","transform","map","item","idx","author","date","App","basename","process","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cb5f205.chunk.js","sourcesContent":["import './Join.css';\r\nimport { useRef, useReducer } from 'react';\r\n\r\n\r\nconst nameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SPECIAL CARACTER':\r\n      return '특수문자를 포함할 수 없습니다.';\r\n    case 'LENGTH':\r\n      return '아이디는 4개 이상, 10개 이하의 영문자 및 숫자로 이루어져야 합니다.';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nconst passwordReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'TOO SIMPLE':\r\n      return '영문자, 숫자, 특수문자가 하나 이상씩 들어가야 합니다.';\r\n    case 'LENGTH':\r\n      return '비밀번호는 4개 이상, 16개 이하의 영문자, 숫자, 특수문자의 조합로 이루어져야 합니다.';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nconst password2Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DIFFERENT':\r\n      return '위에 입력한 비밀번호와 다릅니다.';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nconst Join = () => {\r\n\r\n  const [name, nameDispatch] = useReducer(nameReducer, '');\r\n  const [password, passwordDispatch] = useReducer(passwordReducer, '');\r\n  const [password2, password2Dispatch] = useReducer(password2Reducer, '');\r\n\r\n  const nameInput = useRef();\r\n  const pwInput = useRef();\r\n  const pwInput2 = useRef();\r\n\r\n  const numberPattern = /[0-9]/;\r\n  const letterPattern = /[a-zA-Z]/;\r\n  const specialCharacterPattern = /[~!@#$%^&*()_+|<>?:{}]/;\r\n\r\n  const nameChange = () => {\r\n    const userInput = nameInput.current.value;\r\n\r\n    if(userInput.length<4 || userInput.length>10){\r\n      nameDispatch({type: 'LENGTH'})\r\n    }else if(specialCharacterPattern.test(userInput)){\r\n      nameDispatch({type: 'SPECIAL CARACTER'})\r\n    }else{\r\n      nameDispatch({type: ''})\r\n    }\r\n  }\r\n\r\n  const passwordChange = () => {\r\n    const userInput = pwInput.current.value;\r\n\r\n    if(userInput.length<4 || userInput.length>16){\r\n      passwordDispatch({type: 'LENGTH'})\r\n    }else if(!specialCharacterPattern.test(userInput) || !letterPattern.test(userInput) || !numberPattern.test(userInput)){\r\n      passwordDispatch({type: 'TOO SIMPLE'})\r\n    }else{\r\n      passwordDispatch({type: ''})\r\n    }\r\n  }\r\n\r\n  const password2Change = () => {\r\n    const userInput = pwInput2.current.value;\r\n\r\n    if(!(userInput===pwInput.current.value)){\r\n      password2Dispatch({type: 'DIFFERENT'})\r\n    }else{\r\n      password2Dispatch({type: ''})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Join\">\r\n      <label>User Name</label>\r\n      <input name=\"housename\" type=\"text\" placeholder=\"User Name\" ref={nameInput} required autoFocus onChange={nameChange} />\r\n      <p className=\"username-verify\">\r\n        {name}\r\n      </p>\r\n      <label>Password</label>\r\n      <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={pwInput} required onChange={passwordChange} />\r\n      <p className=\"password-verify\">\r\n        {password}\r\n      </p>\r\n      <label>Password verification</label>\r\n      <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={pwInput2} required onChange={password2Change} />\r\n      <p className=\"password2-verify\">\r\n        {password2}\r\n      </p>\r\n      <input type=\"button\" value=\"Join\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Join;\r\n","import './Main.css';\nimport { useRef, useState } from 'react';\n\nimport axios from \"axios\";\n\nimport writingsArr from './writing.json';\nconst writingsArrRev = [...writingsArr].reverse();\n\nconst getRandomUser = async () => {\n  try {\n    const data = await axios.get(\"https://random-data-api.com/api/users/random_user\");\n    return data;\n  } catch(err) {\n    console.log(\"error: \", err);\n  }\n}\n\nconst Main = () => {\n\n  const initialInfo = {\n    login: false,\n    name: '',\n    birthDate: '',\n    address: '',\n    email: '',\n    phoneNumber: '',\n    subscription: {},\n    employment: '',\n    alert: false,\n    showPersonalData: false\n  }\n\n  const [info, setInfo] = useState(initialInfo);\n\n  const nameInput = useRef();\n  const pwInput = useRef();\n\n  const { login, name, birthDate, address, email, phoneNumber, subscription, employment, alert, showPersonalData } = info;\n\n  const submitUser = () => {\n\n    if(!nameInput.current.value || !pwInput.current.value) {\n      setInfo({\n        ...info,\n        alert: true\n      });\n      \n      nameInput.current.value = '';\n      pwInput.current.value = '';\n\n      return;\n    }\n\n    getRandomUser()\n      .then(raw => {\n        \n        nameInput.current.value = '';\n        pwInput.current.value = '';\n\n        const {country, state, city, street_name, street_address, zip_code} = raw.data.address;\n        setInfo({\n          ...info,\n          login: true,\n          name: raw.data.first_name + ' ' + raw.data.last_name,\n          birthDate: raw.data.date_of_birth,\n          address: `${street_address}, ${street_name}, ${city}, ${state}, ${zip_code} ${country}`,\n          email: raw.data.email,\n          phoneNumber: raw.data.phone_number,\n          subscription: raw.data.subscription,\n          employment: raw.data.employment.title,\n          alert: false\n        })\n\n      });\n  }\n\n  const logoutUser = () => {\n    setInfo({\n      ...info,\n      ...initialInfo\n    });\n  }\n  const showUserData = () => {\n    setInfo({\n      ...info,\n      showPersonalData: !info.showPersonalData\n    })\n  }\n\n  const showDataStyle = {transform: \"rotate(180deg)\"}\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <header className=\"App-header\">\n          <h1>Login Mini Project</h1>\n        </header>\n        <section className=\"App-section\">\n          <div className=\"input-box\">\n            { \n              login ?\n                <input className=\"logout-btn\" type=\"button\" value=\"Logout\" onClick={logoutUser} />\n              :\n                <>\n                  <label>User Name</label>\n                  <input name=\"housename\" type=\"text\" placeholder=\"User Name\" ref={nameInput} required autoFocus />\n                  <label>Password</label>\n                  <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={pwInput} required />\n                  <input type=\"button\" value=\"Login\" onClick={submitUser} />\n                </>\n            }\n            {alert && <p className=\"alert-msg\">You need to enter both id and pw</p>}\n          </div>\n          {\n            login && <div className=\"output-box\">\n              <p className=\"personal-data-hello\"><strong>{login && `Wellcome, ${name}`}</strong></p>\n              <span className=\"show-personal-data-btn\" onClick={showUserData} style={showPersonalData ? showDataStyle : {}}>{showPersonalData ? \"close\" : \"show\"}</span>\n              <div className=\"personal-data-box\">\n                {\n                  showPersonalData && \n                    <>\n                      <p><strong>Date of Birth : </strong> {birthDate}</p>\n                      <p><strong>Address : </strong> {address}</p>\n                      <p><strong>Email : </strong> {email}</p>\n                      <p><strong>Phone Number : </strong> {phoneNumber}</p>\n                      <p><strong>Job : </strong> {employment}</p>\n                      <p><strong>Subscription : </strong> {subscription ? \"yes\" : \"no\"}</p>\n                    </>\n                }\n              </div>\n            </div>\n          }\n          {\n            login && <div className=\"table-box\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Number</th>\n                    <th>Title</th>\n                    <th>Author</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    writingsArrRev.map((item, idx) => {\n                      return (\n                        <tr key={writingsArrRev.length - idx}>\n                          <td>{writingsArrRev.length - idx}</td>\n                          <td>{item.title}</td>\n                          <td>{item.author}</td>\n                          <td>{item.date}</td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n            </div>\n          }\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\r\nimport Join from './Join';\r\nimport Main from './Main';\r\nimport { Route, BrowserRouter, Switch, Link } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Link to=\"/\">홈</Link>\r\n      <Link to=\"/join\">회원가입</Link>\r\n      <Switch>\r\n        <Route exact path=\"/\"><Main /></Route>\r\n        <Route path=\"/join\"><Join /></Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}